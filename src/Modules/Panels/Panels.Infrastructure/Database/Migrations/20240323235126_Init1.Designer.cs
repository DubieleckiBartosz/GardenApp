// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Panels.Infrastructure.Database;

#nullable disable

namespace Panels.Infrastructure.Database.Migrations
{
    [DbContext(typeof(PanelsContext))]
    [Migration("20240323235126_Init1")]
    partial class Init1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("panels")
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BuildingBlocks.Infrastructure.Inbox.InboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("OccurredOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ProcessedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("InboxMessages", "panels");
                });

            modelBuilder.Entity("Panels.Domain.Contractors.Contractor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BusinessUserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("BusinessUserId");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Created");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Email");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastModified");

                    b.Property<string>("Logo")
                        .HasColumnType("text")
                        .HasColumnName("LogoKey");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<string>("Phone")
                        .HasColumnType("text")
                        .HasColumnName("Phone");

                    b.Property<int>("Version")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Contractors", "panels");
                });

            modelBuilder.Entity("Panels.Domain.Contractors.Contractor", b =>
                {
                    b.OwnsMany("Panels.Domain.Contractors.Projects.Project", "_projects", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<int>("ContractorId")
                                .HasColumnType("integer");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("Created");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("Description");

                            b1.Property<int>("Version")
                                .HasColumnType("integer");

                            b1.HasKey("Id");

                            b1.HasIndex("ContractorId");

                            b1.ToTable("Projects", "panels");

                            b1.WithOwner()
                                .HasForeignKey("ContractorId");

                            b1.OwnsMany("Panels.Domain.Contractors.ValueObjects.ProjectImage", "_images", b2 =>
                                {
                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b2.Property<int>("Id"));

                                    b2.Property<string>("Key")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<int>("ProjectId")
                                        .HasColumnType("integer");

                                    b2.HasKey("Id");

                                    b2.HasIndex("ProjectId");

                                    b2.ToTable("ProjectImages", "panels");

                                    b2.WithOwner()
                                        .HasForeignKey("ProjectId");
                                });

                            b1.Navigation("_images");
                        });

                    b.Navigation("_projects");
                });
#pragma warning restore 612, 618
        }
    }
}
